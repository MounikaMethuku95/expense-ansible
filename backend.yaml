- name: connect to backend server
  hosts: backend
  become: yes
  vars:
    mysql_root_password: ExpenseApp@1
  tasks:
  - name: install python-mysql libraries
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop: 
    - PyMysql
    - cryptography

  - name: disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs version 20
    ansible.builtin.command: dnf module enable nodejs:20 -y
  
  - name: install nodejs
    ansible.builtin.dnf:
      name: "{{ item }}"
      state: installed
    loop: 
    - nodejs
    - mysql

  - name: create expense user
    ansible.builtin.user:
      name: expense

  - name: create app directory 
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download backend code
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the downloaded backend code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes #added this bcz of error: "Could not find or access '/tmp/backend.zip' on the Ansible Controller.\nIf you are using a module and expect the file to exist on the remote, see the remote_src option"}

  - name: install dependencies
    community.general.npm:
      path: /app

  - name: copy backend service
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: mysql.learndevopswithaws.cloud
      target: /app/schema/backend.sql

  - name: deamon reload and restart service
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      deamon_reload: true
      name: backend
